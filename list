#!/bin/sh

usage() {
  printf '%b' \
    'Create lists.\n\n' \
    \
    'Usage:\n' \
    '  list [options]\n\n' \
    \
    'Options:\n' \
    '  -h, --help             display this message.\n' \
    '  -m, --mark             mark used in '-u' option.\n' \
    '  -o, --ordered          create an ordered list.\n' \
    '  -s, --sep              separator used in '-o' option.\n' \
    '  -u, --unordered        create an unordered list.\n'
}

o_flag=0 # ordered.
u_flag=0 # unordered.

mark='-'
sep='.'

main() {
  get_opts "${@}"
  check_opts
  check_conflict
  exec_opts
}

get_opts() {
  while getopts ':ouhm:s:' opt; do
    case ${opt} in
    h) usage && exit 0 ;;
    m) mark=${OPTARG} ;;
    o) o_flag=1 ;;
    s) sep=${OPTARG} ;;
    u) u_flag=1 ;;
    *) echo "${0}: unknown option: ${OPTARG}" >&2 && exit 1 ;;
    esac
  done
}

check_opts() {
  if [ ${o_flag} -eq 0 ] && [ ${u_flag} -eq 0 ]; then
    usage
    exit 0
  fi
}

check_conflict() {
  if [ ${o_flag} -eq 1 ] && [ ${u_flag} -eq 1 ]; then
    echo "${0}: '-o' and '-u' are conflicting options" >&2
    exit 1
  fi
}

exec_opts() {
  if [ ${o_flag} -eq 1 ]; then
    list_ordered
  elif [ ${u_flag} -eq 1 ]; then
    list_unordered
  fi
}

list_ordered() {
  line_num=1
  while read -r line; do
    if [ -n "$line" ]; then
      echo "$line_num${sep} $line"
      line_num=$((line_num + 1))
    else
      echo "${line}"
    fi
  done
}

list_unordered() {
  while read -r line; do
    if [ -n "$line" ]; then
      echo "${mark} $line"
    else
      echo "${line}"
    fi
  done
}

main "${@}"
